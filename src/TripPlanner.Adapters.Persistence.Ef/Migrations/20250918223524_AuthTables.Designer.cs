// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TripPlanner.Adapters.Persistence.Ef.Persistence.Db;

#nullable disable

namespace TripPlanner.Adapters.Persistence.Ef.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250918223524_AuthTables")]
    partial class AuthTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("TripPlanner.Adapters.Persistence.Ef.Persistence.Models.DateOptionRecord", b =>
                {
                    b.Property<Guid>("DateOptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("DateIso")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TripId")
                        .HasColumnType("TEXT");

                    b.HasKey("DateOptionId");

                    b.HasIndex("TripId", "DateIso")
                        .IsUnique();

                    b.ToTable("DateOptions", (string)null);
                });

            modelBuilder.Entity("TripPlanner.Adapters.Persistence.Ef.Persistence.Models.DateVoteRecord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("DateOptionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DateOptionId", "UserId")
                        .IsUnique();

                    b.ToTable("DateVotes", (string)null);
                });

            modelBuilder.Entity("TripPlanner.Adapters.Persistence.Ef.Persistence.Models.RefreshTokenRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("ExpiresAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("RevokedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("TripPlanner.Adapters.Persistence.Ef.Persistence.Models.TripParticipantRecord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TripId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TripId", "UserId")
                        .IsUnique();

                    b.ToTable("TripParticipants", (string)null);
                });

            modelBuilder.Entity("TripPlanner.Adapters.Persistence.Ef.Persistence.Models.TripRecord", b =>
                {
                    b.Property<Guid>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OrganizerId")
                        .HasColumnType("TEXT");

                    b.HasKey("TripId");

                    b.ToTable("Trips", (string)null);
                });

            modelBuilder.Entity("TripPlanner.Adapters.Persistence.Ef.Persistence.Models.UserRecord", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TripPlanner.Adapters.Persistence.Ef.Persistence.Models.DateOptionRecord", b =>
                {
                    b.HasOne("TripPlanner.Adapters.Persistence.Ef.Persistence.Models.TripRecord", null)
                        .WithMany("DateOptions")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TripPlanner.Adapters.Persistence.Ef.Persistence.Models.DateVoteRecord", b =>
                {
                    b.HasOne("TripPlanner.Adapters.Persistence.Ef.Persistence.Models.DateOptionRecord", null)
                        .WithMany("Votes")
                        .HasForeignKey("DateOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TripPlanner.Adapters.Persistence.Ef.Persistence.Models.RefreshTokenRecord", b =>
                {
                    b.HasOne("TripPlanner.Adapters.Persistence.Ef.Persistence.Models.UserRecord", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TripPlanner.Adapters.Persistence.Ef.Persistence.Models.TripParticipantRecord", b =>
                {
                    b.HasOne("TripPlanner.Adapters.Persistence.Ef.Persistence.Models.TripRecord", null)
                        .WithMany("Participants")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TripPlanner.Adapters.Persistence.Ef.Persistence.Models.DateOptionRecord", b =>
                {
                    b.Navigation("Votes");
                });

            modelBuilder.Entity("TripPlanner.Adapters.Persistence.Ef.Persistence.Models.TripRecord", b =>
                {
                    b.Navigation("DateOptions");

                    b.Navigation("Participants");
                });

            modelBuilder.Entity("TripPlanner.Adapters.Persistence.Ef.Persistence.Models.UserRecord", b =>
                {
                    b.Navigation("RefreshTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
