<Window x:Class="TripPlanner.Wpf.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:views="clr-namespace:TripPlanner.Wpf.Views"
        xmlns:vm="clr-namespace:TripPlanner.Wpf.ViewModels"
        Title="TripPlanner" Height="720" Width="1100">
  <Window.Resources>
    <BooleanToVisibilityConverter x:Key="BoolToVis"/>

    <!-- Map ViewModels to their Views so we can bind Content and let WPF choose the template -->
    <DataTemplate DataType="{x:Type vm:OverviewViewModel}">
      <views:OverviewTab />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:ParticipantsViewModel}">
      <views:ParticipantsTab />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:DatesViewModel}">
      <views:DatesTab />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:DestinationsViewModel}">
      <views:DestinationsTab />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:GearViewModel}">
      <views:GearTab />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:ItineraryViewModel}">
      <views:ItineraryTab />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:TransportationsViewModel}">
      <views:TransportationsTab />
    </DataTemplate>
  </Window.Resources>
  <DockPanel>
    <Menu DockPanel.Dock="Top">
      <MenuItem Header="_Account">
        <MenuItem Header="Sign out" Click="OnSignOut"/>
      </MenuItem>
    </Menu>

    <Grid Margin="12">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="*"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>

      <!-- Trip selection row -->
      <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="0,0,0,8">
        <TextBlock Text="Trips:" VerticalAlignment="Center" Margin="0,0,8,0"/>
        <ComboBox Width="360" ItemsSource="{Binding Trips}" DisplayMemberPath="Name"
                  SelectedItem="{Binding SelectedTrip}" />
        <Button Content="Reload" Margin="8,0,0,0" Command="{Binding ReloadTripsCommand}"/>
        <TextBox Width="200" Margin="8,0,0,0" Text="{Binding NewTripName, UpdateSourceTrigger=PropertyChanged}"
                 GotFocus="NewTripTextBox_GotFocus" LostFocus="NewTripTextBox_LostFocus"/>
        <Button Content="New Trip" Margin="8,0,0,0" Command="{Binding CreateTripCommand}"/>
        <Button Content="Delete Trip" Margin="8,0,0,0" Command="{Binding DeleteTripCommand}">
          <Button.Style>
            <Style TargetType="Button">
              <Setter Property="IsEnabled" Value="True"/>
              <Setter Property="ToolTip" Value="Delete current trip"/>
              <Style.Triggers>
                <DataTrigger Binding="{Binding SelectedTrip}" Value="{x:Null}">
                  <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CanDeleteTrip}" Value="False">
                  <Setter Property="IsEnabled" Value="False"/>
                  <Setter Property="ToolTip" Value="Trip deletion is not supported in this version."/>
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </Button.Style>
        </Button>
        <Button Content="Join trip…" Margin="8,0,0,0" Command="{Binding OpenJoinTripDialogCommand}" />
        <TextBlock Text="{Binding Status}" Foreground="Crimson" Margin="16,0,0,0" VerticalAlignment="Center"/>
      </StackPanel>

      <!-- Tabs -->
      <TabControl Grid.Row="1">
        <TabItem Header="Overview">
          <ContentControl Content="{Binding Overview}" />
        </TabItem>
        <TabItem Header="Participants / Sharing">
          <ContentControl Content="{Binding Participants}" />
        </TabItem>
        <TabItem Header="Dates &amp; Terms">
          <ContentControl Content="{Binding Dates}" />
        </TabItem>
        <TabItem Header="Destinations">
          <ContentControl Content="{Binding Destinations}" />
        </TabItem>
        <TabItem Header="Gear">
          <ContentControl Content="{Binding Gear}" />
        </TabItem>
        <!-- <TabItem Header="Itinerary"> -->
        <!--   <ContentControl Content="{Binding Itinerary}" /> -->
        <!-- </TabItem> -->
        <TabItem Header="Transport">
          <ContentControl Content="{Binding Transport}" />
        </TabItem>
      </TabControl>

      <!-- Busy bar -->
      <StatusBar Grid.Row="2">
        <StatusBarItem>
          <TextBlock Text="{Binding Status}" />
        </StatusBarItem>
        <StatusBarItem HorizontalAlignment="Right">
          <ProgressBar Width="120" IsIndeterminate="{Binding Busy}" Visibility="{Binding Busy, Converter={StaticResource BoolToVis}}"/>
        </StatusBarItem>
      </StatusBar>
    </Grid>
  </DockPanel>
</Window>
